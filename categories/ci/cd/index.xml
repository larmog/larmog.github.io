<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ci/Cd on kodbasen</title>
    <link>http://larmog.github.io/categories/ci/cd/</link>
    <description>Recent content in Ci/Cd on kodbasen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2016 by larmog</copyright>
    <lastBuildDate>Tue, 26 Jul 2016 08:48:47 +0200</lastBuildDate>
    <atom:link href="http://larmog.github.io/categories/ci/cd/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Jenkins on Kubernetes ARM</title>
      <link>http://larmog.github.io/2016/07/26/jenkins-on-kubernetes-arm/</link>
      <pubDate>Tue, 26 Jul 2016 08:48:47 +0200</pubDate>
      
      <guid>http://larmog.github.io/2016/07/26/jenkins-on-kubernetes-arm/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://www.arm.com/assets/images/ARM_Logo_Black.png&#34; height=&#34;80&#34;&gt;
&lt;img src=&#34;https://secure.gravatar.com/avatar/26da7b36ff8bb5db4211400358dc7c4e.jpg&#34; height=&#34;80&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/kubernetes/kubernetes/master/logo/logo.png&#34; height=&#34;80&#34;&gt;
&lt;img src=&#34;https://wiki.jenkins-ci.org/download/attachments/2916393/headshot.png&#34; height=&#34;80&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; is a tool for &lt;em&gt;Continuous Integration and Continuous Delivery&lt;/em&gt; and has a plugin for provisioning builds (slaves) cross a Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;The plugin kicks off every build in a new &lt;code&gt;pod&lt;/code&gt; and tears it down when the build is complete. This means that every build is clean and reproducible. This is clearly something that we want in &lt;em&gt;Kubernetes-On-ARM&lt;/em&gt;.&lt;/p&gt;

&lt;h5 id=&#34;before-we-begin:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Before we begin&lt;/h5&gt;

&lt;p&gt;There is now support for multiple platforms with the relase of Kubernetes &lt;code&gt;v1.3.0&lt;/code&gt;, &lt;code&gt;arm&lt;/code&gt; and &lt;code&gt;arm64&lt;/code&gt; being two of them. There is also a side project: &lt;a href=&#34;https://github.com/kubernetes/kube-deploy/tree/master/docker-multinode&#34;&gt;&lt;code&gt;kube-deploy/docker-multinode&lt;/code&gt;&lt;/a&gt; that lets you setup a Kubernetes cluster in minutes, using docker.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kodbasen/sloop&#34;&gt;Sloop&lt;/a&gt; - is my project that uses &lt;code&gt;kube-deploy/docker-multinode&lt;/code&gt; for running Kubernetes &lt;em&gt;&amp;ldquo;native&amp;rdquo;&lt;/em&gt;. You can read more about it in an earlier post &lt;a href=&#34;http://larmog.github.io/2016/07/14/building-your-kubernetes-cluster-in-minutes/&#34;&gt;Building your Kubernetes cluster in minutes&lt;/a&gt;. You&amp;rsquo;re more than welcome to check(it)out and give it a try.&lt;/p&gt;

&lt;h6 id=&#34;prerequisites:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Prerequisites&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;A Kubernetes &lt;code&gt;v1.3.0&lt;/code&gt; cluster with &lt;code&gt;arm&lt;/code&gt; or &lt;code&gt;arm64&lt;/code&gt; nodes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;setting-up-jenkins:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Setting up Jenkins&lt;/h5&gt;

&lt;p&gt;The Jenkins master keeps state and needs a durable volume for storing
data about your builds. I highly recommend using something other than &lt;code&gt;emptyDir&lt;/code&gt; or &lt;code&gt;hostPath&lt;/code&gt;. I use a &lt;code&gt;nfs&lt;/code&gt; volume.&lt;/p&gt;

&lt;p&gt;I have created a Jenkins image: &lt;a href=&#34;https://hub.docker.com/r/kodbasen/jenkins-arm/&#34;&gt;&lt;code&gt;kodbasen/jenkins-arm&lt;/code&gt;&lt;/a&gt; and here&amp;rsquo;s a &lt;code&gt;deployment&lt;/code&gt; you can use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  labels:
    run: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: jenkins
  template:
    metadata:
      labels:
        run: jenkins
    spec:
      containers:
      - image: kodbasen/jenkins-arm:2.7.1
        imagePullPolicy: IfNotPresent
        name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
          name: web
        - containerPort: 50000
          protocol: TCP
          name: slaves
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkinshome
      volumes:
      - name: jenkinshome
        persistentVolumeClaim:
          claimName: jenkins
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m using a &lt;code&gt;persistentVolumeClaim:&lt;/code&gt; named &lt;code&gt;jenkins&lt;/code&gt;. I leave it up to you to sort out your volume configuration.&lt;/p&gt;

&lt;p&gt;Next we need to expose our Jenkins deployment as a &lt;code&gt;service&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Service
metadata:
  labels:
    run: jenkins
  name: jenkins
  namespace: default
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: slaves
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    run: jenkins
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now have Jenkins up and running. Now check your Jenkins &lt;code&gt;pod&lt;/code&gt; log and copy the &lt;em&gt;first time password&lt;/em&gt; and head over to Jenkins to set it up, and while your there, install the Kubernetes plugin. Come back here when your done and I&amp;rsquo;ll show you how to setup the plugin.&lt;/p&gt;

&lt;h5 id=&#34;setting-up-jenkins-kubernetes-plugin:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Setting up Jenkins Kubernetes plugin&lt;/h5&gt;

&lt;p&gt;The Kubernetes plugin uses a &lt;code&gt;slave&lt;/code&gt; image and a &lt;code&gt;pod&lt;/code&gt;-template so there´s
not much for you to configure. Follow the instruction on the plugin &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Kubernetes+Plugin&#34;&gt;page&lt;/a&gt; but use &lt;a href=&#34;https://hub.docker.com/r/kodbasen/jenkins-slave-arm/&#34;&gt;kodbasen/jenkins-slave-arm&lt;/a&gt; image as &lt;em&gt;Docker image&lt;/em&gt;.

&lt;figure&gt;
  &lt;div class=&#34;card blue-grey teal lighten-5&#34;&gt;
    &lt;div class=&#34;card-content black-text&#34;&gt;
      
      &lt;figcaption&gt;
          &lt;span class=&#34;card-title black-text&#34;&gt;Kubernetes Pod Template&lt;/span&gt;
          
      &lt;/figcaption&gt;
      
      
          &lt;img class=&#34;responsive-img&#34; src=&#34;http://larmog.github.io/media/kubernetes-pod-template.png&#34;  /&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;In your build configuration you need to restrict where the build can be run. Set it to use your &lt;strong&gt;pod template label&lt;/strong&gt;.

&lt;figure&gt;
  &lt;div class=&#34;card blue-grey teal lighten-5&#34;&gt;
    &lt;div class=&#34;card-content black-text&#34;&gt;
      
      &lt;figcaption&gt;
          &lt;span class=&#34;card-title black-text&#34;&gt;Restrict where the project can be run&lt;/span&gt;
          
      &lt;/figcaption&gt;
      
      
          &lt;img class=&#34;responsive-img&#34; src=&#34;http://larmog.github.io/media/label-expression.png&#34;  /&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;/p&gt;

&lt;h5 id=&#34;running-docker-builds:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Running Docker builds&lt;/h5&gt;

&lt;p&gt;If you wan&amp;rsquo;t to run docker builds on Jenkins theres another slave image that you can use: &lt;a href=&#34;https://hub.docker.com/r/kodbasen/jenkins-docker-slave-arm/&#34;&gt;kodbasen/jenkins-docker-slave-arm&lt;/a&gt;. This image includes the docker binaries and runs docker builds on the host where the pod is running. For this to
work you need to mount three &lt;code&gt;hostPath&lt;/code&gt; volumes:

&lt;figure&gt;
  &lt;div class=&#34;card blue-grey teal lighten-5&#34;&gt;
    &lt;div class=&#34;card-content black-text&#34;&gt;
      
      &lt;figcaption&gt;
          &lt;span class=&#34;card-title black-text&#34;&gt;Pod template volumes&lt;/span&gt;
          
      &lt;/figcaption&gt;
      
      
          &lt;img class=&#34;responsive-img&#34; src=&#34;http://larmog.github.io/media/pod-volumes.png&#34;  /&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;/p&gt;

&lt;h5 id=&#34;running-your-builds:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Running your builds&lt;/h5&gt;

&lt;p&gt;When running your build you&amp;rsquo;ll se the build pending while the slave is provisioned.

&lt;figure&gt;
  &lt;div class=&#34;card blue-grey teal lighten-5&#34;&gt;
    &lt;div class=&#34;card-content black-text&#34;&gt;
      
      &lt;figcaption&gt;
          &lt;span class=&#34;card-title black-text&#34;&gt;Pending build&lt;/span&gt;
          
      &lt;/figcaption&gt;
      
      
          &lt;img class=&#34;responsive-img&#34; src=&#34;http://larmog.github.io/media/pending-build.png&#34;  /&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;You can control which nodes should be used for running builds using a &lt;code&gt;nodeSelector&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id=&#34;conclusion:25f44cd508d63589bb581c03a4d68b48&#34;&gt;Conclusion&lt;/h5&gt;

&lt;p&gt;I&amp;rsquo;ve started moving all my builds from Drone over to Jenkins. If you decide to give Jenkins a try, and you&amp;rsquo;re using &lt;a href=&#34;https://github.com/kodbasen/sloop&#34;&gt;Sloop&lt;/a&gt;, let me know how it goes.&lt;/p&gt;

&lt;p&gt;I hope you picked up something new, and that it was worth while reading this post.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>